@page "/"
@inject NavigationManager navigationManager
@inject SessionService sessionService
@inject IJSRuntime m_jsRuntime
@inject ICustomAuthService authService
@using System.Threading

<div class="login-div">
    <h3>Bejelentkezés</h3>

    <TelerikTextBox Width="200px" @bind-Value="FelhasznaloNev" Label="Felhasználó">
    </TelerikTextBox>

    <TelerikTextBox Width="200px" @bind-Value="Jelszo" Label="Jelszó">
    </TelerikTextBox>

    <TelerikButton class="button-primary login-button" @onclick="Bejelentkezes">Bejelentkezés</TelerikButton>
</div>


@code {

    public string FelhasznaloNev { get; set; }

    public string Jelszo { get; set; }


    public async void Bejelentkezes( )
    {
        var userData = authService.TryLogin( FelhasznaloNev, Jelszo );

        if ( userData != null )
        {
            var data = await m_jsRuntime.InvokeAsync<string>( "getClientData" );
            ClientData clientData = Newtonsoft.Json.JsonConvert.DeserializeObject<ClientData>( data );

            var newSessionId = sessionService.LogInUser( clientData, userData );

            await m_jsRuntime.InvokeAsync<string>( "handleFirstLogin", newSessionId, sessionService.GetSessionAdatok(newSessionId).JsModules );
            //await m_jsRuntime.InvokeAsync<string>( "callModuleFunction", JsModules.AUTHENTICATED, AuthenticatedModuleFunctions.TEST_METHOD );
            //ha azonnal akarunk modul-beli függvényt hívni, még nem biztos, hogy kész a kliens az importtal

        }

        navigationManager.NavigateTo( "menu" );

    }
    protected override async Task OnAfterRenderAsync( bool first )
    {
        var a = 0;
    }




}
